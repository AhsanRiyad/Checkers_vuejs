{"version":3,"sources":["webpack:///../../../src/components/VSkeletonLoader/VSkeletonLoader.ts","webpack:///../../../src/components/VPagination/VPagination.ts"],"names":["name","props","boilerplate","loading","tile","transition","type","types","default","computed","attrs","this","role","$attrs","classes","elevationClasses","isLoading","Boolean","rootTypes","actions","article","avatar","button","card","chip","heading","image","paragraph","sentences","table","text","methods","genBone","$createElement","staticClass","genBones","bone","generator","Array","length","genStructure","children","mapBones","genSkeleton","slot","on","enter","el","beforeLeave","bones","render","h","class","style","undefined","directives","Resize","circle","disabled","validator","val","nextIcon","prevIcon","totalVisible","Number","value","data","maxButtons","selected","themeClasses","items","parseInt","maxLength","Math","range","even","left","right","start","end","watch","mounted","init","setTimeout","onResize","width","$el","parentElement","window","next","e","previous","from","i","genIcon","click","fn","genItem","color","setBackgroundColor","genItems","map","key","index","isNaN","$vuetify","rtl","modifiers","quiet"],"mappings":"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","file":"js/chunk-4f0ec8c0.303ac538.js","sourcesContent":["// Styles\nimport './VSkeletonLoader.sass'\n\n// Mixins\nimport Elevatable from '../../mixins/elevatable'\nimport Measurable from '../../mixins/measurable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\nimport { getSlot } from '../../util/helpers'\n\n/* @vue/component */\nexport default mixins(\n  Elevatable,\n  Measurable,\n  Themeable,\n).extend({\n  name: 'VSkeletonLoader',\n\n  props: {\n    boilerplate: Boolean,\n    loading: Boolean,\n    tile: Boolean,\n    transition: String,\n    type: String,\n    types: {\n      type: Object,\n      default: () => ({}),\n    },\n  },\n\n  computed: {\n    attrs (): object {\n      if (!this.isLoading) return this.$attrs\n\n      return !this.boilerplate ? {\n        'aria-busy': true,\n        'aria-live': 'polite',\n        role: 'alert',\n        ...this.$attrs,\n      } : {}\n    },\n    classes (): object {\n      return {\n        'v-skeleton-loader--boilerplate': this.boilerplate,\n        'v-skeleton-loader--is-loading': this.isLoading,\n        'v-skeleton-loader--tile': this.tile,\n        ...this.themeClasses,\n        ...this.elevationClasses,\n      }\n    },\n    isLoading (): boolean {\n      return Boolean(\n        !getSlot(this) ||\n        this.loading\n      )\n    },\n    rootTypes (): Record<string, string> {\n      return {\n        actions: 'button@2',\n        article: 'heading, paragraph',\n        avatar: 'avatar',\n        button: 'button',\n        card: 'image, card-heading',\n        'card-avatar': 'image, list-item-avatar',\n        'card-heading': 'heading',\n        chip: 'chip',\n        'date-picker': 'list-item, card-heading, divider, date-picker-options, date-picker-days, actions',\n        'date-picker-options': 'text, avatar@2',\n        'date-picker-days': 'avatar@28',\n        heading: 'heading',\n        image: 'image',\n        'list-item': 'text',\n        'list-item-avatar': 'avatar, text',\n        'list-item-two-line': 'sentences',\n        'list-item-avatar-two-line': 'avatar, sentences',\n        'list-item-three-line': 'paragraph',\n        'list-item-avatar-three-line': 'avatar, paragraph',\n        paragraph: 'text@3',\n        sentences: 'text@2',\n        table: 'table-heading, table-thead, table-tbody, table-tfoot',\n        'table-heading': 'heading, text',\n        'table-thead': 'heading@6',\n        'table-tbody': 'table-row-divider@6',\n        'table-row-divider': 'table-row, divider',\n        'table-row': 'table-cell@6',\n        'table-cell': 'text',\n        'table-tfoot': 'text@2, avatar@2',\n        text: 'text',\n        ...this.types,\n      }\n    },\n  },\n\n  methods: {\n    genBone (text: string, children: VNode[]) {\n      return this.$createElement('div', {\n        staticClass: `v-skeleton-loader__${text} v-skeleton-loader__bone`,\n      }, children)\n    },\n    genBones (bone: string): VNode[] {\n      // e.g. 'text@3'\n      const [type, length] = bone.split('@') as [string, number]\n      const generator = () => this.genStructure(type)\n\n      // Generate a length array based upon\n      // value after @ in the bone string\n      return Array.from({ length }).map(generator)\n    },\n    // Fix type when this is merged\n    // https://github.com/microsoft/TypeScript/pull/33050\n    genStructure (type?: string): any {\n      let children = []\n      type = type || this.type || ''\n      const bone = this.rootTypes[type] || ''\n\n      // End of recursion, do nothing\n      /* eslint-disable-next-line no-empty, brace-style */\n      if (type === bone) {}\n      // Array of values - e.g. 'heading, paragraph, text@2'\n      else if (type.indexOf(',') > -1) return this.mapBones(type)\n      // Array of values - e.g. 'paragraph@4'\n      else if (type.indexOf('@') > -1) return this.genBones(type)\n      // Array of values - e.g. 'card@2'\n      else if (bone.indexOf(',') > -1) children = this.mapBones(bone)\n      // Array of values - e.g. 'list-item@2'\n      else if (bone.indexOf('@') > -1) children = this.genBones(bone)\n      // Single value - e.g. 'card-heading'\n      else if (bone) children.push(this.genStructure(bone))\n\n      return [this.genBone(type, children)]\n    },\n    genSkeleton () {\n      const children = []\n      const slot = getSlot(this)\n\n      if (!this.isLoading) children.push(slot)\n      else children.push(this.genStructure())\n\n      /* istanbul ignore else */\n      if (!this.transition) return children\n\n      /* istanbul ignore next */\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n        },\n        // Only show transition when\n        // content has been loaded\n        on: {\n          enter: (el: HTMLElement) => {\n            if (this.isLoading) el.style.transition = 'none'\n          },\n          beforeLeave: (el: HTMLElement) => {\n            el.style.display = 'none'\n          },\n        },\n      }, children)\n    },\n    mapBones (bones: string) {\n      // Remove spaces and return array of structures\n      return bones.replace(/\\s/g, '').split(',').map(this.genStructure)\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-skeleton-loader',\n      attrs: this.attrs,\n      on: this.$listeners,\n      class: this.classes,\n      style: this.isLoading ? this.measurableStyles : undefined,\n    }, [this.genSkeleton()])\n  },\n})\n","import './VPagination.sass'\n\nimport VIcon from '../VIcon'\n\n// Directives\nimport Resize from '../../directives/resize'\n\n// Mixins\nimport mixins from '../../util/mixins'\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport { VNode, CreateElement } from 'vue'\n\n/* @vue/component */\nexport default mixins(Colorable, Themeable).extend({\n  name: 'v-pagination',\n\n  directives: { Resize },\n\n  props: {\n    circle: Boolean,\n    disabled: Boolean,\n    length: {\n      type: Number,\n      default: 0,\n      validator: (val: number) => val % 1 === 0,\n    },\n    nextIcon: {\n      type: String,\n      default: '$next',\n    },\n    prevIcon: {\n      type: String,\n      default: '$prev',\n    },\n    totalVisible: [Number, String],\n    value: {\n      type: Number,\n      default: 0,\n    },\n  },\n\n  data () {\n    return {\n      maxButtons: 0,\n      selected: null as number | null,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-pagination': true,\n        'v-pagination--circle': this.circle,\n        'v-pagination--disabled': this.disabled,\n        ...this.themeClasses,\n      }\n    },\n\n    items (): (string | number)[] {\n      const totalVisible = parseInt(this.totalVisible, 10)\n\n      const maxLength = Math.min(\n        Math.max(0, totalVisible) || this.length,\n        Math.max(0, this.maxButtons) || this.length,\n        this.length\n      )\n\n      if (this.length <= maxLength) {\n        return this.range(1, this.length)\n      }\n\n      const even = maxLength % 2 === 0 ? 1 : 0\n      const left = Math.floor(maxLength / 2)\n      const right = this.length - left + 1 + even\n\n      if (this.value > left && this.value < right) {\n        const start = this.value - left + 2\n        const end = this.value + left - 2 - even\n\n        return [1, '...', ...this.range(start, end), '...', this.length]\n      } else if (this.value === left) {\n        const end = this.value + left - 1 - even\n        return [...this.range(1, end), '...', this.length]\n      } else if (this.value === right) {\n        const start = this.value - left + 1\n        return [1, '...', ...this.range(start, this.length)]\n      } else {\n        return [\n          ...this.range(1, left),\n          '...',\n          ...this.range(right, this.length),\n        ]\n      }\n    },\n  },\n\n  watch: {\n    value () {\n      this.init()\n    },\n  },\n\n  mounted () {\n    this.init()\n  },\n\n  methods: {\n    init () {\n      this.selected = null\n\n      this.$nextTick(this.onResize)\n      // TODO: Change this (f75dee3a, cbdf7caa)\n      setTimeout(() => (this.selected = this.value), 100)\n    },\n    onResize () {\n      const width = this.$el && this.$el.parentElement\n        ? this.$el.parentElement.clientWidth\n        : window.innerWidth\n\n      this.maxButtons = Math.floor((width - 96) / 42)\n    },\n    next (e: Event) {\n      e.preventDefault()\n      this.$emit('input', this.value + 1)\n      this.$emit('next')\n    },\n    previous (e: Event) {\n      e.preventDefault()\n      this.$emit('input', this.value - 1)\n      this.$emit('previous')\n    },\n    range (from: number, to: number) {\n      const range = []\n\n      from = from > 0 ? from : 1\n\n      for (let i = from; i <= to; i++) {\n        range.push(i)\n      }\n\n      return range\n    },\n    genIcon (h: CreateElement, icon: string, disabled: boolean, fn: EventListener): VNode {\n      return h('li', [\n        h('button', {\n          staticClass: 'v-pagination__navigation',\n          class: {\n            'v-pagination__navigation--disabled': disabled,\n          },\n          attrs: {\n            type: 'button',\n          },\n          on: disabled ? {} : { click: fn },\n        }, [h(VIcon, [icon])]),\n      ])\n    },\n    genItem (h: CreateElement, i: string | number): VNode {\n      const color: string | false = (i === this.value) && (this.color || 'primary')\n      return h('button', this.setBackgroundColor(color, {\n        staticClass: 'v-pagination__item',\n        class: {\n          'v-pagination__item--active': i === this.value,\n        },\n        attrs: {\n          type: 'button',\n        },\n        on: {\n          click: () => this.$emit('input', i),\n        },\n      }), [i.toString()])\n    },\n    genItems (h: CreateElement): VNode[] {\n      return this.items.map((i, index) => {\n        return h('li', { key: index }, [\n          isNaN(Number(i)) ? h('span', { class: 'v-pagination__more' }, [i.toString()]) : this.genItem(h, i),\n        ])\n      })\n    },\n  },\n\n  render (h): VNode {\n    const children = [\n      this.genIcon(h, this.$vuetify.rtl ? this.nextIcon : this.prevIcon, this.value <= 1, this.previous),\n      this.genItems(h),\n      this.genIcon(h, this.$vuetify.rtl ? this.prevIcon : this.nextIcon, this.value >= this.length, this.next),\n    ]\n\n    return h('ul', {\n      directives: [{\n        modifiers: { quiet: true },\n        name: 'resize',\n        value: this.onResize,\n      }],\n      class: this.classes,\n    }, children)\n  },\n})\n"],"sourceRoot":""}