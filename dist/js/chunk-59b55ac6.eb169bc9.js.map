{"version":3,"sources":["webpack:///../../../src/components/VSubheader/index.ts","webpack:///../../../src/components/VMenu/index.ts","webpack:///../../../src/components/VChip/index.ts","webpack:///../../../src/mixins/comparable/index.ts","webpack:///../../../src/components/VDivider/index.ts","webpack:///../../../src/components/VCheckbox/VSimpleCheckbox.ts","webpack:///../../../src/components/VSelect/VSelectList.ts","webpack:///../../../src/mixins/filterable/index.ts","webpack:///../../../src/components/VSelect/VSelect.ts","webpack:///../../../src/components/VChip/VChip.ts","webpack:///../../../src/components/VSubheader/VSubheader.ts"],"names":["name","props","valueComparator","type","default","functional","directives","ripple","disabled","value","indeterminate","indeterminateIcon","onIcon","offIcon","render","data","children","h","staticClass","center","icon","VIcon","dark","light","classes","class","on","click","e","f","mixins","action","dense","hideSelected","items","itemDisabled","String","Array","itemText","itemValue","noDataText","noFilter","searchInput","selectedItems","computed","parsedItems","this","map","item","tileActiveClass","Object","setTextColor","staticNoDataTile","tile","attrs","role","undefined","mousedown","$createElement","VListItem","genTileContent","methods","genAction","VListItemAction","color","inputValue","input","genDivider","VDivider","genFilteredText","text","getMaskedCharacters","end","start","genHighlight","middle","genHeader","VSubheader","genLabelledBy","getText","split","join","index","genTile","hasItem","getDisabled","activeClass","$scopedSlots","length","parent","scopedSlot","needsTile","innerHTML","VList","id","domProps","indexOf","getValue","slot","Boolean","$slots","themeClasses","$attrs","tabindex","defaultMenuProps","closeOnClick","closeOnContentClick","disableKeys","openOnClick","maxHeight","baseMixins","ClickOutside","appendIcon","attach","cacheItems","chips","clearable","deletableChips","eager","itemColor","menuProps","multiple","openOnClear","returnObject","smallChips","cachedItems","content","isBooted","isMenuActive","lastItem","lazyValue","selectedIndex","keyboardLookupPrefix","keyboardLookupLastTime","allItems","filterDuplicates","concat","computedItems","computedOwns","counterValue","isFocused","args","closeConditional","dynamicHeight","hasChips","hasSlot","isDirty","listData","scopeId","$vnode","context","$vuetify","lang","t","select","selectItem","scopedSlots","staticList","console","VSelectList","virtualizedItems","$_menuProps","slice","menuCanShow","normalisedProps","acc","p","nudgeBottom","watch","internalValue","immediate","handler","mounted","$refs","menu","blur","activateMenu","clearableCallback","contains","$el","uniqueValues","arr","val","findExistingIndex","i","genChipSelection","isDisabled","VChip","close","small","key","JSON","genCommaSelection","last","genDefaultSlot","selections","prefix","genAffix","suffix","genInput","genInputSlot","genList","genListWithSlot","slots","slotName","genMenu","VMenu","ref","genSelections","genSelection","genSlotSelection","selection","selected","readonly","getMenuIndex","onBlur","$emit","onChipInput","setValue","onClick","onEscDown","onKeyPress","KEYBOARD_LOOKUP_THRESHOLD","now","performance","findIndex","setTimeout","onKeyDown","keyCode","onUpDown","onTabDown","onSpaceDown","onMenuActiveChange","onMouseUp","hasMouseDown","appendInner","isEnclosed","onScroll","showMoreItems","scrollHeight","scrollTop","requestAnimationFrame","activeTile","listIndex","setMenuIndex","setSelectedItems","values","v","oldValue","active","chipGroup","closeIcon","draggable","filter","filterIcon","label","link","outlined","pill","tag","textColor","proxyClass","groupClasses","hasClose","isClickable","created","breakingProps","original","replacement","genFilter","left","genClose","right","genContent","setBackgroundColor","inset","$listeners"],"mappings":"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","file":"js/chunk-59b55ac6.eb169bc9.js","sourcesContent":["import VSubheader from './VSubheader'\n\nexport { VSubheader }\nexport default VSubheader\n","import VMenu from './VMenu'\n\nexport { VMenu }\nexport default VMenu\n","import VChip from './VChip'\n\nexport { VChip }\nexport default VChip\n","import Vue from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { deepEqual } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'comparable',\n  props: {\n    valueComparator: {\n      type: Function,\n      default: deepEqual,\n    } as any as PropValidator<typeof deepEqual>,\n  },\n})\n","import VDivider from './VDivider'\n\nexport { VDivider }\nexport default VDivider\n","import './VSimpleCheckbox.sass'\n\nimport ripple from '../../directives/ripple'\n\nimport Vue, { VNode, VNodeDirective } from 'vue'\nimport { VIcon } from '../VIcon'\n\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\nimport { wrapInArray } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'v-simple-checkbox',\n\n  functional: true,\n\n  directives: {\n    ripple,\n  },\n\n  props: {\n    ...Colorable.options.props,\n    ...Themeable.options.props,\n    disabled: Boolean,\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    value: Boolean,\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n  },\n\n  render (h, { props, data }): VNode {\n    const children = []\n\n    if (props.ripple && !props.disabled) {\n      const ripple = h('div', Colorable.options.methods.setTextColor(props.color, {\n        staticClass: 'v-input--selection-controls__ripple',\n        directives: [{\n          name: 'ripple',\n          value: { center: true },\n        }] as VNodeDirective[],\n      }))\n\n      children.push(ripple)\n    }\n\n    let icon = props.offIcon\n    if (props.indeterminate) icon = props.indeterminateIcon\n    else if (props.value) icon = props.onIcon\n\n    children.push(h(VIcon, Colorable.options.methods.setTextColor(props.value && props.color, {\n      props: {\n        disabled: props.disabled,\n        dark: props.dark,\n        light: props.light,\n      },\n    }), icon))\n\n    const classes = {\n      'v-simple-checkbox': true,\n      'v-simple-checkbox--disabled': props.disabled,\n    }\n\n    return h('div', {\n      ...data,\n      class: classes,\n      on: {\n        click: (e: MouseEvent) => {\n          e.stopPropagation()\n\n          if (data.on && data.on.input && !props.disabled) {\n            wrapInArray(data.on.input).forEach(f => f(!props.value))\n          }\n        },\n      },\n    }, children)\n  },\n})\n","// Styles\nimport '../VCard/VCard.sass'\n\n// Components\nimport VSimpleCheckbox from '../VCheckbox/VSimpleCheckbox'\nimport VDivider from '../VDivider'\nimport VSubheader from '../VSubheader'\nimport {\n  VList,\n  VListItem,\n  VListItemAction,\n  VListItemContent,\n  VListItemTitle,\n} from '../VList'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Helpers\nimport {\n  escapeHTML,\n  getPropertyFromItem,\n} from '../../util/helpers'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(Colorable, Themeable).extend({\n  name: 'v-select-list',\n\n  // https://github.com/vuejs/vue/issues/6872\n  directives: {\n    ripple,\n  },\n\n  props: {\n    action: Boolean,\n    dense: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n    itemDisabled: {\n      type: [String, Array, Function],\n      default: 'disabled',\n    } as PropValidator<string | (string | number)[] | ((item: object, fallback?: any) => any)>,\n    itemText: {\n      type: [String, Array, Function],\n      default: 'text',\n    } as PropValidator<string | (string | number)[] | ((item: object, fallback?: any) => any)>,\n    itemValue: {\n      type: [String, Array, Function],\n      default: 'value',\n    } as PropValidator<string | (string | number)[] | ((item: object, fallback?: any) => any)>,\n    noDataText: String,\n    noFilter: Boolean,\n    searchInput: {\n      default: null,\n    } as PropValidator<any>,\n    selectedItems: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n  },\n\n  computed: {\n    parsedItems (): any[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    tileActiveClass (): string {\n      return Object.keys(this.setTextColor(this.color).class || {}).join(' ')\n    },\n    staticNoDataTile (): VNode {\n      const tile = {\n        attrs: {\n          role: undefined,\n        },\n        on: {\n          mousedown: (e: Event) => e.preventDefault(), // Prevent onBlur from being called\n        },\n      }\n\n      return this.$createElement(VListItem, tile, [\n        this.genTileContent(this.noDataText),\n      ])\n    },\n  },\n\n  methods: {\n    genAction (item: object, inputValue: any): VNode {\n      return this.$createElement(VListItemAction, [\n        this.$createElement(VSimpleCheckbox, {\n          props: {\n            color: this.color,\n            value: inputValue,\n          },\n          on: {\n            input: () => this.$emit('select', item),\n          },\n        }),\n      ])\n    },\n    genDivider (props: { [key: string]: any }) {\n      return this.$createElement(VDivider, { props })\n    },\n    genFilteredText (text: string) {\n      text = text || ''\n\n      if (!this.searchInput || this.noFilter) return escapeHTML(text)\n\n      const { start, middle, end } = this.getMaskedCharacters(text)\n\n      return `${escapeHTML(start)}${this.genHighlight(middle)}${escapeHTML(end)}`\n    },\n    genHeader (props: { [key: string]: any }): VNode {\n      return this.$createElement(VSubheader, { props }, props.header)\n    },\n    genHighlight (text: string): string {\n      return `<span class=\"v-list-item__mask\">${escapeHTML(text)}</span>`\n    },\n    genLabelledBy (item: object) {\n      const text = escapeHTML(this.getText(item).split(' ').join('-').toLowerCase())\n\n      return `${text}-list-item-${this._uid}`\n    },\n    getMaskedCharacters (text: string): {\n      start: string\n      middle: string\n      end: string\n    } {\n      const searchInput = (this.searchInput || '').toString().toLocaleLowerCase()\n      const index = text.toLocaleLowerCase().indexOf(searchInput)\n\n      if (index < 0) return { start: '', middle: text, end: '' }\n\n      const start = text.slice(0, index)\n      const middle = text.slice(index, index + searchInput.length)\n      const end = text.slice(index + searchInput.length)\n      return { start, middle, end }\n    },\n    genTile (\n      item: object,\n      disabled = null as null | boolean,\n      value = false\n    ): VNode | VNode[] | undefined {\n      if (!value) value = this.hasItem(item)\n\n      if (item === Object(item)) {\n        disabled = disabled !== null\n          ? disabled\n          : this.getDisabled(item)\n      }\n\n      const tile = {\n        attrs: {\n          // Default behavior in list does not\n          // contain aria-selected by default\n          'aria-selected': String(value),\n          'aria-labelledby': this.genLabelledBy(item),\n          role: 'option',\n        },\n        on: {\n          mousedown: (e: Event) => {\n            // Prevent onBlur from being called\n            e.preventDefault()\n          },\n          click: () => disabled || this.$emit('select', item),\n        },\n        props: {\n          activeClass: this.tileActiveClass,\n          disabled,\n          ripple: true,\n          inputValue: value,\n        },\n      }\n\n      if (!this.$scopedSlots.item) {\n        return this.$createElement(VListItem, tile, [\n          this.action && !this.hideSelected && this.items.length > 0\n            ? this.genAction(item, value)\n            : null,\n          this.genTileContent(item),\n        ])\n      }\n\n      const parent = this\n      const scopedSlot = this.$scopedSlots.item({\n        parent,\n        item,\n        attrs: {\n          ...tile.attrs,\n          ...tile.props,\n        },\n        on: tile.on,\n      })\n\n      return this.needsTile(scopedSlot)\n        ? this.$createElement(VListItem, tile, scopedSlot)\n        : scopedSlot\n    },\n    genTileContent (item: any): VNode {\n      const innerHTML = this.genFilteredText(this.getText(item))\n\n      return this.$createElement(VListItemContent,\n        [this.$createElement(VListItemTitle, {\n          attrs: { id: this.genLabelledBy(item) },\n          domProps: { innerHTML },\n        })]\n      )\n    },\n    hasItem (item: object) {\n      return this.parsedItems.indexOf(this.getValue(item)) > -1\n    },\n    needsTile (slot: VNode[] | undefined) {\n      return slot!.length !== 1 ||\n        slot![0].componentOptions == null ||\n        slot![0].componentOptions.Ctor.options.name !== 'v-list-item'\n    },\n    getDisabled (item: object) {\n      return Boolean(getPropertyFromItem(item, this.itemDisabled, false))\n    },\n    getText (item: object) {\n      return String(getPropertyFromItem(item, this.itemText, item))\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n  },\n\n  render (): VNode {\n    const children = []\n    for (const item of this.items) {\n      if (this.hideSelected &&\n        this.hasItem(item)\n      ) continue\n\n      if (item == null) children.push(this.genTile(item))\n      else if (item.header) children.push(this.genHeader(item))\n      else if (item.divider) children.push(this.genDivider(item))\n      else children.push(this.genTile(item))\n    }\n\n    children.length || children.push(this.$slots['no-data'] || this.staticNoDataTile)\n\n    this.$slots['prepend-item'] && children.unshift(this.$slots['prepend-item'])\n\n    this.$slots['append-item'] && children.push(this.$slots['append-item'])\n\n    return this.$createElement('div', {\n      staticClass: 'v-select-list v-card',\n      class: this.themeClasses,\n    }, [\n      this.$createElement(VList, {\n        attrs: {\n          id: this.$attrs.id,\n          role: 'listbox',\n          tabindex: -1,\n        },\n        props: { dense: this.dense },\n      }, children),\n    ])\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'filterable',\n\n  props: {\n    noDataText: {\n      type: String,\n      default: '$vuetify.noDataText',\n    },\n  },\n})\n","// Styles\nimport '../VTextField/VTextField.sass'\nimport './VSelect.sass'\n\n// Components\nimport VChip from '../VChip'\nimport VMenu from '../VMenu'\nimport VSelectList from './VSelectList'\n\n// Extensions\nimport VTextField from '../VTextField/VTextField'\n\n// Mixins\nimport Comparable from '../../mixins/comparable'\nimport Filterable from '../../mixins/filterable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Utilities\nimport { getPropertyFromItem, keyCodes } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { PropValidator } from 'vue/types/options'\nimport { VNode, VNodeDirective } from 'vue'\n\nexport const defaultMenuProps = {\n  closeOnClick: false,\n  closeOnContentClick: false,\n  disableKeys: true,\n  openOnClick: false,\n  maxHeight: 304,\n}\n\n// Types\ntype ItemProperty = PropValidator<string | (string | number)[] | ((item: object, fallback?: any) => any)>\nconst baseMixins = mixins(\n  VTextField,\n  Comparable,\n  Filterable\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    menu: InstanceType<typeof VMenu>\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-select',\n\n  directives: {\n    ClickOutside,\n  },\n\n  props: {\n    appendIcon: {\n      type: String,\n      default: '$dropdown',\n    },\n    attach: {\n      default: false,\n    } as PropValidator<string | boolean | Element | VNode>,\n    cacheItems: Boolean,\n    chips: Boolean,\n    clearable: Boolean,\n    deletableChips: Boolean,\n    eager: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => [],\n    },\n    itemColor: {\n      type: String,\n      default: 'primary',\n    },\n    itemDisabled: {\n      type: [String, Array, Function],\n      default: 'disabled',\n    } as ItemProperty,\n    itemText: {\n      type: [String, Array, Function],\n      default: 'text',\n    } as ItemProperty,\n    itemValue: {\n      type: [String, Array, Function],\n      default: 'value',\n    } as ItemProperty,\n    menuProps: {\n      type: [String, Array, Object],\n      default: () => defaultMenuProps,\n    },\n    multiple: Boolean,\n    openOnClear: Boolean,\n    returnObject: Boolean,\n    smallChips: Boolean,\n  },\n\n  data () {\n    return {\n      cachedItems: this.cacheItems ? this.items : [],\n      content: null as any,\n      isBooted: false,\n      isMenuActive: false,\n      lastItem: 20,\n      // As long as a value is defined, show it\n      // Otherwise, check if multiple\n      // to determine which default to provide\n      lazyValue: this.value !== undefined\n        ? this.value\n        : this.multiple ? [] : undefined,\n      selectedIndex: -1,\n      selectedItems: [] as any[],\n      keyboardLookupPrefix: '',\n      keyboardLookupLastTime: 0,\n    }\n  },\n\n  computed: {\n    /* All items that the select has */\n    allItems (): object[] {\n      return this.filterDuplicates(this.cachedItems.concat(this.items))\n    },\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-select': true,\n        'v-select--chips': this.hasChips,\n        'v-select--chips--small': this.smallChips,\n        'v-select--is-menu-active': this.isMenuActive,\n        'v-select--is-multi': this.multiple,\n      }\n    },\n    /* Used by other components to overwrite */\n    computedItems (): object[] {\n      return this.allItems\n    },\n    computedOwns (): string {\n      return `list-${this._uid}`\n    },\n    counterValue (): number {\n      return this.multiple\n        ? this.selectedItems.length\n        : (this.getText(this.selectedItems[0]) || '').toString().length\n    },\n    directives (): VNodeDirective[] | undefined {\n      return this.isFocused ? [{\n        name: 'click-outside',\n        value: this.blur,\n        args: {\n          closeConditional: this.closeConditional,\n        },\n      } as VNodeDirective] : undefined\n    },\n    dynamicHeight () {\n      return 'auto'\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n    hasSlot (): boolean {\n      return Boolean(this.hasChips || this.$scopedSlots.selection)\n    },\n    isDirty (): boolean {\n      return this.selectedItems.length > 0\n    },\n    listData (): object {\n      const scopeId = this.$vnode && (this.$vnode.context!.$options as { [key: string]: any })._scopeId\n      const attrs = scopeId ? {\n        [scopeId]: true,\n      } : {}\n\n      return {\n        attrs: {\n          ...attrs,\n          id: this.computedOwns,\n        },\n        props: {\n          action: this.multiple,\n          color: this.itemColor,\n          dense: this.dense,\n          hideSelected: this.hideSelected,\n          items: this.virtualizedItems,\n          itemDisabled: this.itemDisabled,\n          itemText: this.itemText,\n          itemValue: this.itemValue,\n          noDataText: this.$vuetify.lang.t(this.noDataText),\n          selectedItems: this.selectedItems,\n        },\n        on: {\n          select: this.selectItem,\n        },\n        scopedSlots: {\n          item: this.$scopedSlots.item,\n        },\n      }\n    },\n    staticList (): VNode {\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        consoleError('assert: staticList should not be called if slots are used')\n      }\n\n      return this.$createElement(VSelectList, this.listData)\n    },\n    virtualizedItems (): object[] {\n      return (this.$_menuProps as any).auto\n        ? this.computedItems\n        : this.computedItems.slice(0, this.lastItem)\n    },\n    menuCanShow: () => true,\n    $_menuProps (): object {\n      let normalisedProps = typeof this.menuProps === 'string'\n        ? this.menuProps.split(',')\n        : this.menuProps\n\n      if (Array.isArray(normalisedProps)) {\n        normalisedProps = normalisedProps.reduce((acc, p) => {\n          acc[p.trim()] = true\n          return acc\n        }, {})\n      }\n\n      return {\n        ...defaultMenuProps,\n        eager: this.eager,\n        value: this.menuCanShow && this.isMenuActive,\n        nudgeBottom: normalisedProps.offsetY ? 1 : 0, // convert to int\n        ...normalisedProps,\n      }\n    },\n  },\n\n  watch: {\n    internalValue (val) {\n      this.initialValue = val\n      this.setSelectedItems()\n    },\n    isBooted () {\n      this.$nextTick(() => {\n        if (this.content && this.content.addEventListener) {\n          this.content.addEventListener('scroll', this.onScroll, false)\n        }\n      })\n    },\n    isMenuActive (val) {\n      this.$nextTick(() => this.onMenuActiveChange(val))\n\n      if (!val) return\n\n      this.isBooted = true\n    },\n    items: {\n      immediate: true,\n      handler (val) {\n        if (this.cacheItems) {\n          // Breaks vue-test-utils if\n          // this isn't calculated\n          // on the next tick\n          this.$nextTick(() => {\n            this.cachedItems = this.filterDuplicates(this.cachedItems.concat(val))\n          })\n        }\n\n        this.setSelectedItems()\n      },\n    },\n  },\n\n  mounted () {\n    this.content = this.$refs.menu && (this.$refs.menu as { [key: string]: any }).$refs.content\n  },\n\n  methods: {\n    /** @public */\n    blur (e?: Event) {\n      VTextField.options.methods.blur.call(this, e)\n      this.isMenuActive = false\n      this.isFocused = false\n      this.selectedIndex = -1\n    },\n    /** @public */\n    activateMenu () {\n      if (\n        this.disabled ||\n        this.readonly ||\n        this.isMenuActive\n      ) return\n\n      this.isMenuActive = true\n    },\n    clearableCallback () {\n      this.setValue(this.multiple ? [] : undefined)\n      this.$nextTick(() => this.$refs.input && this.$refs.input.focus())\n\n      if (this.openOnClear) this.isMenuActive = true\n    },\n    closeConditional (e: Event) {\n      return (\n        !this._isDestroyed &&\n\n        // Click originates from outside the menu content\n        this.content &&\n        !this.content.contains(e.target) &&\n\n        // Click originates from outside the element\n        this.$el &&\n        !this.$el.contains(e.target as Node) &&\n        e.target !== this.$el\n      )\n    },\n    filterDuplicates (arr: any[]) {\n      const uniqueValues = new Map()\n      for (let index = 0; index < arr.length; ++index) {\n        const item = arr[index]\n        const val = this.getValue(item)\n\n        // TODO: comparator\n        !uniqueValues.has(val) && uniqueValues.set(val, item)\n      }\n      return Array.from(uniqueValues.values())\n    },\n    findExistingIndex (item: object) {\n      const itemValue = this.getValue(item)\n\n      return (this.internalValue || []).findIndex((i: object) => this.valueComparator(this.getValue(i), itemValue))\n    },\n    genChipSelection (item: object, index: number) {\n      const isDisabled = (\n        this.disabled ||\n        this.readonly ||\n        this.getDisabled(item)\n      )\n\n      return this.$createElement(VChip, {\n        staticClass: 'v-chip--select',\n        attrs: { tabindex: -1 },\n        props: {\n          close: this.deletableChips && !isDisabled,\n          disabled: isDisabled,\n          inputValue: index === this.selectedIndex,\n          small: this.smallChips,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            if (isDisabled) return\n\n            e.stopPropagation()\n\n            this.selectedIndex = index\n          },\n          'click:close': () => this.onChipInput(item),\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }, this.getText(item))\n    },\n    genCommaSelection (item: object, index: number, last: boolean) {\n      const color = index === this.selectedIndex && this.computedColor\n      const isDisabled = (\n        this.disabled ||\n        this.getDisabled(item)\n      )\n\n      return this.$createElement('div', this.setTextColor(color, {\n        staticClass: 'v-select__selection v-select__selection--comma',\n        class: {\n          'v-select__selection--disabled': isDisabled,\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }), `${this.getText(item)}${last ? '' : ', '}`)\n    },\n    genDefaultSlot (): (VNode | VNode[] | null)[] {\n      const selections = this.genSelections()\n      const input = this.genInput()\n\n      // If the return is an empty array\n      // push the input\n      if (Array.isArray(selections)) {\n        selections.push(input)\n      // Otherwise push it into children\n      } else {\n        selections.children = selections.children || []\n        selections.children.push(input)\n      }\n\n      return [\n        this.genFieldset(),\n        this.$createElement('div', {\n          staticClass: 'v-select__slot',\n          directives: this.directives,\n        }, [\n          this.genLabel(),\n          this.prefix ? this.genAffix('prefix') : null,\n          selections,\n          this.suffix ? this.genAffix('suffix') : null,\n          this.genClearIcon(),\n          this.genIconSlot(),\n        ]),\n        this.genMenu(),\n        this.genProgress(),\n      ]\n    },\n    genInput (): VNode {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data!.domProps!.value = null\n      input.data!.attrs!.readonly = true\n      input.data!.attrs!.type = 'text'\n      input.data!.attrs!['aria-readonly'] = true\n      input.data!.on!.keypress = this.onKeyPress\n\n      return input\n    },\n    genInputSlot (): VNode {\n      const render = VTextField.options.methods.genInputSlot.call(this)\n\n      render.data!.attrs = {\n        ...render.data!.attrs,\n        role: 'button',\n        'aria-haspopup': 'listbox',\n        'aria-expanded': String(this.isMenuActive),\n        'aria-owns': this.computedOwns,\n      }\n\n      return render\n    },\n    genList (): VNode {\n      // If there's no slots, we can use a cached VNode to improve performance\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        return this.genListWithSlot()\n      } else {\n        return this.staticList\n      }\n    },\n    genListWithSlot (): VNode {\n      const slots = ['prepend-item', 'no-data', 'append-item']\n        .filter(slotName => this.$slots[slotName])\n        .map(slotName => this.$createElement('template', {\n          slot: slotName,\n        }, this.$slots[slotName]))\n      // Requires destructuring due to Vue\n      // modifying the `on` property when passed\n      // as a referenced object\n      return this.$createElement(VSelectList, {\n        ...this.listData,\n      }, slots)\n    },\n    genMenu (): VNode {\n      const props = this.$_menuProps as any\n      props.activator = this.$refs['input-slot']\n\n      // Attach to root el so that\n      // menu covers prepend/append icons\n      if (\n        // TODO: make this a computed property or helper or something\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) {\n        props.attach = this.$el\n      } else {\n        props.attach = this.attach\n      }\n\n      return this.$createElement(VMenu, {\n        attrs: { role: undefined },\n        props,\n        on: {\n          input: (val: boolean) => {\n            this.isMenuActive = val\n            this.isFocused = val\n          },\n        },\n        ref: 'menu',\n      }, [this.genList()])\n    },\n    genSelections (): VNode {\n      let length = this.selectedItems.length\n      const children = new Array(length)\n\n      let genSelection\n      if (this.$scopedSlots.selection) {\n        genSelection = this.genSlotSelection\n      } else if (this.hasChips) {\n        genSelection = this.genChipSelection\n      } else {\n        genSelection = this.genCommaSelection\n      }\n\n      while (length--) {\n        children[length] = genSelection(\n          this.selectedItems[length],\n          length,\n          length === children.length - 1\n        )\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-select__selections',\n      }, children)\n    },\n    genSlotSelection (item: object, index: number): VNode[] | undefined {\n      return this.$scopedSlots.selection!({\n        attrs: {\n          class: 'v-chip--select',\n        },\n        parent: this,\n        item,\n        index,\n        select: (e: Event) => {\n          e.stopPropagation()\n          this.selectedIndex = index\n        },\n        selected: index === this.selectedIndex,\n        disabled: this.disabled || this.readonly,\n      })\n    },\n    getMenuIndex () {\n      return this.$refs.menu ? (this.$refs.menu as { [key: string]: any }).listIndex : -1\n    },\n    getDisabled (item: object) {\n      return getPropertyFromItem(item, this.itemDisabled, false)\n    },\n    getText (item: object) {\n      return getPropertyFromItem(item, this.itemText, item)\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n    onBlur (e?: Event) {\n      e && this.$emit('blur', e)\n    },\n    onChipInput (item: object) {\n      if (this.multiple) this.selectItem(item)\n      else this.setValue(null)\n      // If all items have been deleted,\n      // open `v-menu`\n      if (this.selectedItems.length === 0) {\n        this.isMenuActive = true\n      } else {\n        this.isMenuActive = false\n      }\n      this.selectedIndex = -1\n    },\n    onClick () {\n      if (this.isDisabled) return\n\n      this.isMenuActive = true\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        this.$emit('focus')\n      }\n    },\n    onEscDown (e: Event) {\n      e.preventDefault()\n      if (this.isMenuActive) {\n        e.stopPropagation()\n        this.isMenuActive = false\n      }\n    },\n    onKeyPress (e: KeyboardEvent) {\n      if (\n        this.multiple ||\n        this.readonly\n      ) return\n\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000 // milliseconds\n      const now = performance.now()\n      if (now - this.keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        this.keyboardLookupPrefix = ''\n      }\n      this.keyboardLookupPrefix += e.key.toLowerCase()\n      this.keyboardLookupLastTime = now\n\n      const index = this.allItems.findIndex(item => {\n        const text = (this.getText(item) || '').toString()\n\n        return text.toLowerCase().startsWith(this.keyboardLookupPrefix)\n      })\n      const item = this.allItems[index]\n      if (index !== -1) {\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        setTimeout(() => this.setMenuIndex(index))\n      }\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n      const menu = this.$refs.menu\n\n      // If enter, space, open menu\n      if ([\n        keyCodes.enter,\n        keyCodes.space,\n      ].includes(keyCode)) this.activateMenu()\n\n      if (!menu) return\n\n      // If menu is active, allow default\n      // listIndex change from menu\n      if (this.isMenuActive && keyCode !== keyCodes.tab) {\n        this.$nextTick(() => {\n          menu.changeListIndex(e)\n          this.$emit('update:list-index', menu.listIndex)\n        })\n      }\n\n      // If menu is not active, up and down can do\n      // one of 2 things. If multiple, opens the\n      // menu, if not, will cycle through all\n      // available options\n      if (\n        !this.isMenuActive &&\n        [keyCodes.up, keyCodes.down].includes(keyCode)\n      ) return this.onUpDown(e)\n\n      // If escape deactivate the menu\n      if (keyCode === keyCodes.esc) return this.onEscDown(e)\n\n      // If tab - select item or close menu\n      if (keyCode === keyCodes.tab) return this.onTabDown(e)\n\n      // If space preventDefault\n      if (keyCode === keyCodes.space) return this.onSpaceDown(e)\n    },\n    onMenuActiveChange (val: boolean) {\n      // If menu is closing and mulitple\n      // or menuIndex is already set\n      // skip menu index recalculation\n      if (\n        (this.multiple && !val) ||\n        this.getMenuIndex() > -1\n      ) return\n\n      const menu = this.$refs.menu\n\n      if (!menu || !this.isDirty) return\n\n      // When menu opens, set index of first active item\n      for (let i = 0; i < menu.tiles.length; i++) {\n        if (menu.tiles[i].getAttribute('aria-selected') === 'true') {\n          this.setMenuIndex(i)\n          break\n        }\n      }\n    },\n    onMouseUp (e: MouseEvent) {\n      if (this.hasMouseDown && e.which !== 3) {\n        const appendInner = this.$refs['append-inner']\n\n        // If append inner is present\n        // and the target is itself\n        // or inside, toggle menu\n        if (this.isMenuActive &&\n          appendInner &&\n          (appendInner === e.target ||\n          (appendInner as { [key: string]: any }).contains(e.target))\n        ) {\n          this.$nextTick(() => (this.isMenuActive = !this.isMenuActive))\n        // If user is clicking in the container\n        // and field is enclosed, activate it\n        } else if (this.isEnclosed && !this.isDisabled) {\n          this.isMenuActive = true\n        }\n      }\n\n      VTextField.options.methods.onMouseUp.call(this, e)\n    },\n    onScroll () {\n      if (!this.isMenuActive) {\n        requestAnimationFrame(() => (this.content.scrollTop = 0))\n      } else {\n        if (this.lastItem >= this.computedItems.length) return\n\n        const showMoreItems = (\n          this.content.scrollHeight -\n          (this.content.scrollTop +\n          this.content.clientHeight)\n        ) < 200\n\n        if (showMoreItems) {\n          this.lastItem += 20\n        }\n      }\n    },\n    onSpaceDown (e: KeyboardEvent) {\n      e.preventDefault()\n    },\n    onTabDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      const activeTile = menu.activeTile\n\n      // An item that is selected by\n      // menu-index should toggled\n      if (\n        !this.multiple &&\n        activeTile &&\n        this.isMenuActive\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        activeTile.click()\n      } else {\n        // If we make it here,\n        // the user has no selected indexes\n        // and is probably tabbing out\n        this.blur(e)\n      }\n    },\n    onUpDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      e.preventDefault()\n\n      // Multiple selects do not cycle their value\n      // when pressing up or down, instead activate\n      // the menu\n      if (this.multiple) return this.activateMenu()\n\n      const keyCode = e.keyCode\n\n      // Cycle through available values to achieve\n      // select native behavior\n      menu.getTiles()\n      keyCodes.up === keyCode ? menu.prevTile() : menu.nextTile()\n      menu.activeTile && menu.activeTile.click()\n    },\n    selectItem (item: object) {\n      if (!this.multiple) {\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        this.isMenuActive = false\n      } else {\n        const internalValue = (this.internalValue || []).slice()\n        const i = this.findExistingIndex(item)\n\n        i !== -1 ? internalValue.splice(i, 1) : internalValue.push(item)\n        this.setValue(internalValue.map((i: object) => {\n          return this.returnObject ? i : this.getValue(i)\n        }))\n\n        // When selecting multiple\n        // adjust menu after each\n        // selection\n        this.$nextTick(() => {\n          this.$refs.menu &&\n            (this.$refs.menu as { [key: string]: any }).updateDimensions()\n        })\n\n        // We only need to reset list index for multiple\n        // to keep highlight when an item is toggled\n        // on and off\n        if (!this.multiple) return\n\n        const listIndex = this.getMenuIndex()\n\n        this.setMenuIndex(-1)\n\n        // There is no item to re-highlight\n        // when selections are hidden\n        if (this.hideSelected) return\n\n        this.$nextTick(() => this.setMenuIndex(listIndex))\n      }\n    },\n    setMenuIndex (index: number) {\n      this.$refs.menu && ((this.$refs.menu as { [key: string]: any }).listIndex = index)\n    },\n    setSelectedItems () {\n      const selectedItems = []\n      const values = !this.multiple || !Array.isArray(this.internalValue)\n        ? [this.internalValue]\n        : this.internalValue\n\n      for (const value of values) {\n        const index = this.allItems.findIndex(v => this.valueComparator(\n          this.getValue(v),\n          this.getValue(value)\n        ))\n\n        if (index > -1) {\n          selectedItems.push(this.allItems[index])\n        }\n      }\n\n      this.selectedItems = selectedItems\n    },\n    setValue (value: any) {\n      const oldValue = this.internalValue\n      this.internalValue = value\n      value !== oldValue && this.$emit('change', value)\n    },\n  },\n})\n","// Styles\nimport './VChip.sass'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Components\nimport { VExpandXTransition } from '../transitions'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Sizeable,\n  Routable,\n  Themeable,\n  GroupableFactory('chipGroup'),\n  ToggleableFactory('inputValue')\n).extend({\n  name: 'v-chip',\n\n  props: {\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.chipGroup) return ''\n\n        return this.chipGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    close: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$delete',\n    },\n    disabled: Boolean,\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: Boolean,\n    outlined: Boolean,\n    pill: Boolean,\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    textColor: String,\n    value: null as any as PropValidator<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-chip--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-chip': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-chip--clickable': this.isClickable,\n        'v-chip--disabled': this.disabled,\n        'v-chip--draggable': this.draggable,\n        'v-chip--label': this.label,\n        'v-chip--link': this.isLink,\n        'v-chip--no-color': !this.color,\n        'v-chip--outlined': this.outlined,\n        'v-chip--pill': this.pill,\n        'v-chip--removable': this.hasClose,\n        ...this.themeClasses,\n        ...this.sizeableClasses,\n        ...this.groupClasses,\n      }\n    },\n    hasClose (): boolean {\n      return Boolean(this.close)\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.chipGroup\n      )\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['outline', 'outlined'],\n      ['selected', 'input-value'],\n      ['value', 'active'],\n      ['@input', '@active.sync'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      this.$emit('click', e)\n\n      this.chipGroup && this.toggle()\n    },\n    genFilter (): VNode {\n      const children = []\n\n      if (this.isActive) {\n        children.push(\n          this.$createElement(VIcon, {\n            staticClass: 'v-chip__filter',\n            props: { left: true },\n          }, this.filterIcon)\n        )\n      }\n\n      return this.$createElement(VExpandXTransition, children)\n    },\n    genClose (): VNode {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-chip__close',\n        props: {\n          right: true,\n        },\n        on: {\n          click: (e: Event) => {\n            e.stopPropagation()\n\n            this.$emit('click:close')\n            this.$emit('update:active', false)\n          },\n        },\n      }, this.closeIcon)\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-chip__content',\n      }, [\n        this.filter && this.genFilter(),\n        this.$slots.default,\n        this.hasClose && this.genClose(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genContent()]\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      draggable: this.draggable ? 'true' : undefined,\n      tabindex: this.chipGroup && !this.disabled ? 0 : data.attrs!.tabindex,\n    }\n    data.directives!.push({\n      name: 'show',\n      value: this.active,\n    })\n    data = this.setBackgroundColor(this.color, data)\n\n    const color = this.textColor || (this.outlined && this.color)\n\n    return h(tag, this.setTextColor(color, data), children)\n  },\n})\n","// Styles\nimport './VSubheader.sass'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nexport default mixins(\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-subheader',\n\n  props: {\n    inset: Boolean,\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-subheader',\n      class: {\n        'v-subheader--inset': this.inset,\n        ...this.themeClasses,\n      },\n      attrs: this.$attrs,\n      on: this.$listeners,\n    }, this.$slots.default)\n  },\n})\n"],"sourceRoot":""}